name: Push
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # get full history

      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: .github/cli/go.sum

      - name: Install cli
        working-directory: ./.github/cli
        run: go install ./cmd/trer

      - name: Check
        run: trer check

      - name: Show matrix
        run: trer matrix

      - id: set-matrix
        run: |
          cat << EOF >> $GITHUB_OUTPUT
          matrix=$(trer matrix)
          EOF

  push:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'push' && 'tre-staging' || '' }} 
    needs: filter
    if: ${{ needs.filter.outputs.matrix != '{"include":[]}' }}
    strategy:
      matrix: ${{ fromJson(needs.filter.outputs.matrix) }}
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: .github/cli/go.sum

      - name: Install CLI
        working-directory: ./.github/cli
        run: go install ./cmd/trer

      - name: Build
        run: |
          # Create the build script and make it executable
          trer script ${{ matrix.directory }} > build.sh
          chmod +x build.sh

          # Remove all compressed objects
          rm -rf *.gz

          echo "Running"; cat build.sh
          ./build.sh

      - uses: aws-actions/configure-aws-credentials@v4
        if: github.event_name == 'push'
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          role-session-name: ${{ secrets.AWS_ROLE_NAME }}

      - name: Push
        if: github.event_name == 'push'
        run: |
          aws s3 cp . s3://${{ secrets.BUCKET_NAME }}/${{ matrix.directory }}/ \
            --recursive \
            --exclude "*" \
            --include "*.gz"
